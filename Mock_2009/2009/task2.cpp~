#include <iostream>
#include <cmath>
#include <vector>
#include <string>
#include <map>
#include <numeric>
//#include <iterator>

using namespace std;







template <typename T>
class Laurent_polynomial{
  int N;
  vector<T> lv;
public:
  Laurent_polynomial(int nn=0,T an=0):N(nn),lv(vector<T>(2*nn+1,an)){}
  T operator[](int i){return lv[i+N];}
  int getN()const{return N;}
  Laurent_polynomial operator+ (Laurent_polynomial &rhs){
    Laurent_polynomial res;
    Laurent_polynomial low;
    if(N<rhs.getN()){res=rhs;low=*this;}
    else{res=*this;low=rhs;}
    for(int i=-low.getN();i<=low.getN();i++){res[i]+=low[i];}
    return res;
  }
  T value(T y){
    T res(0);
    for(int i=-N;i<=N;i++){
      res+=(*this)[i]*pow(y,i);
    }
    return res;
  }










};
